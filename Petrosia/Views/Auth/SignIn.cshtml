<!------signin.cshtml------->

@model Petrosia.Models.Guest



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotel Admin Portal | Sign In</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>

        :root {
            --primary-color: #EFDCAB;
            --primary-dark: #d8c79a;
            --text-light: #f8f9fa;
            --bg-dark: #1a1a1a;
            --card-bg: #1a1a1a;
            --error-color: #ff4d4f;
            --border-color: rgba(239, 220, 171, 0.2);
        }


        body {
            font-family: 'Poppins', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: #1a1a1a;
            padding: 20px;
        }

        .container {
            background: var(--card-bg);
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 380px;
            text-align: center;
            border: 1px solid var(--border-color);
        }

        .logo-container img {
            height: 100px;
            width: auto;
        }

        h2 {
            font-size: 1.5rem;
            color: white;
            margin: 0 0 1.5rem 0;
            font-weight: 500;
        }

        .input-container {
            position: relative;
            margin-bottom: 1.25rem;
            text-align: left;
        }

            .input-container input {
                padding-right: 35px;
                width: 100%;
                padding: 0.75rem 1rem;
                border: 1px solid var(--border-color);
                border-radius: 6px;
                background: rgba(239, 220, 171, 0.05);
                font-size: 0.9rem;
                color: var(--text-light);
                outline: none;
                transition: all 0.2s ease;
                box-sizing: border-box;
            }

                .input-container input:focus {
                    border-color: var(--primary-color);
                    box-shadow: none; /* Remove the glow effect */
                }

            .input-container label {
                display: block;
                margin-bottom: 0.5rem;
                color: var(--primary-color);
                font-size: 0.8rem;
                font-weight: 400;
                opacity: 0.8;
            }

        /* Add these styles to your CSS */
        .password-field-wrapper {
            position: relative;
            display: flex;
            align-items: center;
        }

            .password-field-wrapper input {
                padding-right: 2.5rem; /* Make space for the eye icon */
                width: 100%;
            }

        .password-toggle {
            position: absolute;
            right: 12px;
            cursor: pointer;
            color: var(--text-light);
            opacity: 0.7;
            transition: opacity 0.2s ease;
            background: none;
            border: none;
            font-size: 1rem;
        }

            .password-toggle:hover {
                opacity: 1;
            }

        button {
            width: 100%;
            padding: 0.75rem;
            background: var(--primary-color);
            color: #1a1a1a;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s ease;
            font-size: 0.95rem;
            margin-top: 0.5rem;
        }

            button:hover {
                background: var(--primary-dark);
            }

        .footer-text {
            color: rgba(239, 220, 171, 0.6);
            font-size: 0.8rem;
            margin-top: 1.5rem;
        }

        .link {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            opacity: 0.9;
        }

            .link:hover {
                opacity: 1;
                text-decoration: underline;
            }

        .text-danger {
            color: var(--error-color);
            font-size: 0.75rem;
            margin-top: 0.25rem;
            display: block;
            text-align: left;
        }

    </style>
</head>
<body>
    <div class="container">
        <div class="logo-container">
            <a href="@Url.Action("Index", "Home")"><img src="~/images/logo1.png"></a>
        </div>
        <h2>Admin Sign In</h2>
        <form asp-action="SignIn" asp-controller="Auth" method="post">
            <div class="input-container">
                
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="Admin@Petrosia.com" required>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="input-container">
               
                <label for="password">Password</label>
                <div class="password-field-wrapper">
                    <input type="password" id="password" name="password" placeholder="••••••••" required>
                    <i class="far fa-eye password-toggle" id="togglePassword"></i>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <button type="submit">Sign In</button>

            <p class="footer-text">
                Don't have an account yet? <a class="link" href="SignUp">SignUp</a>
            </p>
            
        </form>
        

    </div>

    <script>
                document.addEventListener('DOMContentLoaded', function() {
            const togglePassword = document.querySelector('#togglePassword');
            const password = document.querySelector('#password');
            if (togglePassword && password) {
                togglePassword.addEventListener('click', function(e) {
                    e.preventDefault();
                    // Toggle the type attribute
                    const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
                    password.setAttribute('type', type);
                    // Toggle the eye icon
                    this.classList.toggle('fa-eye');
                    this.classList.toggle('fa-eye-slash');
                    // Focus back on the password field
                    password.focus();
                });
                // Optional: Hide the password when clicking outside
                document.addEventListener('click', function(e) {
                    if (e.target !== togglePassword && e.target !== password) {
                        password.setAttribute('type', 'password');
                        togglePassword.classList.add('fa-eye');
                        togglePassword.classList.remove('fa-eye-slash');
                    }
                });
            }
        });
    </script>

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }

</body>
</html>
